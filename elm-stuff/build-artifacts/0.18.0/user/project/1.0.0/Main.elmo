var _user$project$Main$imgStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '2px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'box-shadow', _1: '0 2px 4px rgba(0,0,0,0.12), 0 2px 3px rgba(0,0,0,0.24)'},
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$buttonStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'background-color', _1: '#99ddff'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '2px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'border', _1: '1px solid #99ddff'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'color', _1: 'white'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'font-size', _1: '1.5em'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'cursor', _1: 'pointer'},
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		}
	});
var _user$project$Main$titleStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'font-size', _1: '2em'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'color', _1: '#333'},
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$inputStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'padding-top', _1: '16px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'padding-bottom', _1: '6px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'width', _1: '188px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'outline', _1: 'none'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'color', _1: '#000'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'font-size', _1: '16px'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'font-weight', _1: '400'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'border', _1: 'none'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'border-bottom', _1: '2px solid #99ddff'},
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$Main$pageStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'font-family', _1: 'Helvetica'},
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$decodeGifUrl = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'data',
		_1: {
			ctor: '::',
			_0: 'image_url',
			_1: {ctor: '[]'}
		}
	},
	_elm_lang$core$Json_Decode$string);
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {topic: a, gifUrl: b, searchText: c};
	});
var _user$project$Main$NewGifReceived = function (a) {
	return {ctor: 'NewGifReceived', _0: a};
};
var _user$project$Main$getRandomGif = function (topic) {
	var url = A2(_elm_lang$core$Basics_ops['++'], 'https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=', topic);
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Main$NewGifReceived,
		A2(_elm_lang$http$Http$get, url, _user$project$Main$decodeGifUrl));
};
var _user$project$Main$init = function (topic) {
	return {
		ctor: '_Tuple2',
		_0: A3(_user$project$Main$Model, '', '', ''),
		_1: _user$project$Main$getRandomGif(topic)
	};
};
var _user$project$Main$update = F2(
	function (message, model) {
		var _p0 = message;
		switch (_p0.ctor) {
			case 'SearchTextChanged':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{searchText: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'AskedForNewPic':
				return (_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$String$length(model.searchText),
					1) < 0) ? {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Main$getRandomGif(model.topic)
				} : {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{searchText: '', topic: model.searchText}),
					_1: _user$project$Main$getRandomGif(model.searchText)
				};
			default:
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: A3(_user$project$Main$Model, model.topic, _p0._0._0, ''),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
		}
	});
var _user$project$Main$SearchTextChanged = function (a) {
	return {ctor: 'SearchTextChanged', _0: a};
};
var _user$project$Main$AskedForNewPic = {ctor: 'AskedForNewPic'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Main$pageStyle,
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h2,
				{
					ctor: '::',
					_0: _user$project$Main$titleStyle,
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(model.topic),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _user$project$Main$inputStyle,
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$value(model.searchText),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$SearchTextChanged),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$placeholder('search'),
									_1: {ctor: '[]'}
								}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$br,
						{ctor: '[]'},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$br,
							{ctor: '[]'},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _user$project$Main$buttonStyle,
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$AskedForNewPic),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('more please!'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$br,
									{ctor: '[]'},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$br,
										{ctor: '[]'},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$img,
											{
												ctor: '::',
												_0: _user$project$Main$imgStyle,
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$src(model.gifUrl),
													_1: {ctor: '[]'}
												}
											},
											{ctor: '[]'}),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: _user$project$Main$init('cats'),
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: _user$project$Main$subscriptions
	})();
